// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// dgumbel
double dgumbel(double x, double location, double scale, bool log_dens);
RcppExport SEXP _dgumbel_dgumbel(SEXP xSEXP, SEXP locationSEXP, SEXP scaleSEXP, SEXP log_densSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type location(locationSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< bool >::type log_dens(log_densSEXP);
    rcpp_result_gen = Rcpp::wrap(dgumbel(x, location, scale, log_dens));
    return rcpp_result_gen;
END_RCPP
}
// ddgumbel
Rcpp::NumericVector ddgumbel(double x, double location, double scale, bool log_dens);
RcppExport SEXP _dgumbel_ddgumbel(SEXP xSEXP, SEXP locationSEXP, SEXP scaleSEXP, SEXP log_densSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type location(locationSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< bool >::type log_dens(log_densSEXP);
    rcpp_result_gen = Rcpp::wrap(ddgumbel(x, location, scale, log_dens));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dgumbel_dgumbel", (DL_FUNC) &_dgumbel_dgumbel, 4},
    {"_dgumbel_ddgumbel", (DL_FUNC) &_dgumbel_ddgumbel, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_dgumbel(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
